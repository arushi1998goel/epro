package net.medavante.regression.testscripts.subjectdetails;

import java.util.Properties;

import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Factory;
import org.testng.annotations.Test;

import net.medavante.portal.dataproviders.DataProviders;
import net.medavante.portal.pages.studynavigator.StudyDashBoardPage;
import net.medavante.portal.selenium.core.BaseTest;
import net.medavante.portal.selenium.core.Configuration;
import net.medavante.portal.utilities.Constants;

public class FPTC_1274_VerifyThatAfterDeletingASubjectWithTheAutogeneratedTemporaryIDThatTempIDIsAvailableForTheAutoGeneration_SIP
		extends BaseTest {


	@Factory(dataProvider = "Browsers", dataProviderClass = DataProviders.class)
	public FPTC_1274_VerifyThatAfterDeletingASubjectWithTheAutogeneratedTemporaryIDThatTempIDIsAvailableForTheAutoGeneration_SIP(
			String browser) {
		super(browser);
	}

	@BeforeMethod
	public void testSetUp() throws Exception {

		System.setProperty("className", getClass().getSimpleName());
		Properties properties = Configuration.readTestData("RegressionTestData");
		studyName = properties.getProperty("AutomationStudyNameNonCR");

		reportLog("PR3.1: Login to Site Portal");
		dashBoardPage = loginPage.loginInApplication(AT_PRODSiteCoordinatorCRSelfSchedule, AT_Password);

		reportLog("PR3.2: Verify Login successful");
		dashBoardPage.verifyMedavantePortalPage();

		reportLog("PR3.3: Navigate to study dashboard");
		studyNavigatorDashBoardPage = dashBoardPage.selectHorizontalUpperNavMenuItem(StudyDashBoardPage.class, Constants.NavigateText, Constants.StudyText);

		reportLog("PR3.4: Select study");
		studyNavigatorDashBoardPage.selectStudy(studyName,Constants.ATAssignedRater_10);

		reportLog("PR3.5: Add new Subject by control 'Add New Subject'");
		studyNavigatorDashBoardPage.verifyAddSubjectBtnIsDisplayed();
		studyNavigatorDashBoardPage.clickOnAddSubjectBTN();

		reportLog("PR3.6: Verify Add Subject Popup appear");
		studyNavigatorDashBoardPage.verifyAddSubjectPopUpIsDisplayed();

		reportLog("PR3.7: Generating TemporaryID");
		Subject01 = studyNavigatorDashBoardPage.generateAutoTemporaryID();

		reportLog("PR3.8: Select a language​");
		studyNavigatorDashBoardPage.selectSubjectLanguage(studyLanguage);

		reportLog("PR3.9: Save the changes");
		subjectDetailPage = studyNavigatorDashBoardPage.clickOnSaveBTN();

		reportLog("PR3.10: Verify Subject details page is opened with TemporaryID: " + Subject01);
		subjectDetailPage.verifyTempIdIsDisplayed(Subject01);

		reportLog("PR3.11: Logout application");
		loginPage.logoutApplication();
		loginPage.verifyUserLogout();

	}

	/**
	 * =========================================================================
	 * Test Case Id: FP-TC-1274 Test Case Name: Verify that after deleting a
	 * Subject with the autogenerated Temporary ID, that Temp ID is available
	 * for the auto-generation.
	 * =========================================================================
	 * 
	 * @throws Exception
	 */

	@Test(description = "FP-TC-1274_Verify that after deleting a Subject with the autogenerated Temporary ID, that Temp ID is available for the auto-generation.", groups = {
			"" })
	public void FPTC_1274_VerifyThatAfterDeletingASubjectWithTheAutogeneratedTemporaryIDThatTempIDIsAvailableForTheAutoGeneration() {

		reportLog("1.2: Login to Site Portal");
		dashBoardPage = loginPage.loginInApplication(AT_PRODSiteCoordinatorCRSelfSchedule, AT_Password);

		reportLog("1.3: Verify Login successful");
		dashBoardPage.verifyMedavantePortalPage();
		
		reportLog("1.4: Navigate to study dashboard");
		studyNavigatorDashBoardPage = dashBoardPage.selectHorizontalUpperNavMenuItem(StudyDashBoardPage.class, Constants.NavigateText, Constants.StudyText);

		reportLog("1.5: Select study");
		studyNavigatorDashBoardPage.selectStudy(studyName,Constants.ATAssignedRater_10);

		reportLog("1.6: Select subject: " + Subject01);
		subjectDetailPage = studyNavigatorDashBoardPage.clickOnSubject(Subject01);

		reportLog("1.7: Verify Subject details page is opened");
		subjectDetailPage.verifyTempIdIsDisplayed(Subject01);

		reportLog("2.1: Delete subject from subject Detail Page");
		subjectDetailPage.deleteSubject();

		reportLog("2.2: Verify Subject '" + Subject01 + "' is deleted.");
		studyNavigatorDashBoardPage.verifyExistingOfDeletedID(Constants.StudyDashBoard_columnName_Subject, Subject01);

		reportLog("3.1: Add new Subject by control 'Add New Subject'");
		studyNavigatorDashBoardPage.verifyAddSubjectBtnIsDisplayed();
		studyNavigatorDashBoardPage.clickOnAddSubjectBTN();

		reportLog("3.2: Verify Add Subject Popup appear");
		studyNavigatorDashBoardPage.verifyAddSubjectPopUpIsDisplayed();

		reportLog("3.3: Generating TemporaryID");
		Subject02 = studyNavigatorDashBoardPage.generateAutoTemporaryID();

		reportLog("4.1: Select a language​");
		studyNavigatorDashBoardPage.selectSubjectLanguage(studyLanguage);

		reportLog("4.2: Save the changes");
		subjectDetailPage = studyNavigatorDashBoardPage.clickOnSaveBTN();

		reportLog("4.3: Verify Subject details page is opened");
		subjectDetailPage.verifysubjectDetailsLabelIsDisplayed();

		reportLog("4.4: Verify generated Temp ID '" + Subject02 + "' is the Temp ID of the deleted Subject");
		subjectDetailPage.verifyTempIdIsDisplayed(Subject01);

		reportLog("4.5: Logout application");
		loginPage.logoutApplication();

		reportLog("4.6: Verify User is Logout from the application");
		loginPage.verifyUserLogout();

	}
}
