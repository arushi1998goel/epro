package net.medavante.regression.testscripts.r2suite;

import java.util.Properties;
import java.util.Random;

import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Factory;
import org.testng.annotations.Test;

import net.medavante.portal.dataproviders.DataProviders;
import net.medavante.portal.pages.studynavigator.StudyDashBoardPage;
import net.medavante.portal.selenium.core.BaseTest;
import net.medavante.portal.selenium.core.Configuration;
import net.medavante.portal.utilities.Constants;

public class R2_FPTC_1272_RestrictedSubjectTemporaryIDEditingOnPortalTest_SIP extends BaseTest {

	Random rand = new Random();
	int n = rand.nextInt(10) + 1;
	protected String subjectName = "SUBJ_" + generateRandomString(5);
	protected String crSiteName, crStudyName, crstudyLanguage;
	
	@Factory(dataProvider = "Browsers", dataProviderClass = DataProviders.class)
	public R2_FPTC_1272_RestrictedSubjectTemporaryIDEditingOnPortalTest_SIP(String browser) {
		super(browser);
	}

	@BeforeMethod
	public void getTestData() throws Exception {

		Properties prop = Configuration.readTestData("RegressionTestData");
		crStudyName = prop.getProperty("studyForEnrolledStatus");
		crstudyLanguage = prop.getProperty("studyLanguage");
		System.setProperty("className", getClass().getSimpleName());

		reportLog("Creating a subject from Admin user");
		reportLog("1. Log in to the Portal as the User of Pr#4");
		dashBoardPage = loginPage.loginInApplication(SuperAdminUN, SuperAdminPW);
		studyNavigatorDashBoardPage=dashBoardPage.selectHorizontalUpperNavMenuItem(StudyDashBoardPage.class,Constants.NavigateText, Constants.StudyText);
		studyNavigatorDashBoardPage.selectStudy(crStudyName,Constants.ATAssignedRater_10);
		studyNavigatorDashBoardPage.verifyAddSubjectBtnIsDisplayed();
		studyNavigatorDashBoardPage.clickOnAddSubjectBTN();
		studyNavigatorDashBoardPage.verifyAddSubjectPopUpIsDisplayed();
		studyNavigatorDashBoardPage.verifyClickToGenerateTemporaryIDTXTIsDisplayWithActiveIcon();
		
		String generatedTempId = studyNavigatorDashBoardPage.generateAutoTemporaryID();
		studyNavigatorDashBoardPage.verifyAutoTemporaryIDIsGenerated(generatedTempId);
		studyNavigatorDashBoardPage.verifyAutoGenerateTemporaryCancelBTNIsDisplay();
		studyNavigatorDashBoardPage.verifyScreeningNumNotRequiredAndEditable();
		studyNavigatorDashBoardPage.verifyAutoTemporaryIDIsGenerated(generatedTempId);

		studyNavigatorDashBoardPage.inputNotes(Constants.NoteText);
		studyNavigatorDashBoardPage.inputScreeningNum(subjectName);
		studyNavigatorDashBoardPage.selectSubjectLanguage(Constants.subjectLanguage);
		studyNavigatorDashBoardPage.clickOnSaveBTN();
		studyNavigatorDashBoardPage.navigateBack();

	}

	/**
	 * ====================================================================================================================
	 * Test Case Id: FPTC1272 Test Case Name: Restricted Subject Temporary ID
	 * editing on Portal
	 * 
	 * pre-qualification : 1. At least 1 user with a Claim to Manage Studies
	 * exists 2. At least 1 active Study with Auto generation of Temporary ID
	 * configured with at least one Site exists 3. At least 1 Subject created
	 * with an auto-generated Temporary ID exists
	 * ====================================================================================================================
	 * 
	 * @throws Exception
	 */

	@Test(description = "FPTC1272 --Restricted Subject Temporary ID editing on Portal", groups = { "R2" })

	public void FPTC_1272_verifyRestrictedSubjectTemporaryIDEditingOnPortal() throws Exception {

		studyNavigatorDashBoardPage=dashBoardPage.selectHorizontalUpperNavMenuItem(StudyDashBoardPage.class,Constants.NavigateText, Constants.StudyText);

		reportLog("1.1: Study from PR#2 -> Subjects");	
		subjectDetailPage = studyNavigatorDashBoardPage.clickOnSubject(subjectName);
		subjectDetailPage.waitSpinnerToBecomeInvisible();

		reportLog("1.2: Verify Edit control for subject Details is available");
		subjectDetailPage.verifySubjectEditBtnIsDisplayed();

		reportLog("1.3:  Select an Edit option and Edit screen of the Subject from PR#3 is displayed.");
		subjectDetailPage.verifySubjectOpenedInEditMode();

		reportLog("1.4: Temporary ID field is disabled and has the Auto-generated Temporary ID");
		studyNavigatorDashBoardPage.verifyAutoGeneratedTemporaryINPIsNotEditable();
		String generatedTempId = studyNavigatorDashBoardPage.autoGenerateTemporaryIDValue();
		studyNavigatorDashBoardPage.verifyAutoTemporaryIDIsGenerated(generatedTempId);

		reportLog("2: Fill in the Screening# field");
		studyNavigatorDashBoardPage.inputScreeningNum(screeningNum);
		studyNavigatorDashBoardPage.verifyScreeningNumIsEntered(screeningNum);

		reportLog("2.1: Save changes");
		subjectDetailPage.clickOnSaveBtn();
		
		reportLog("2.2: Select reason to update the screening reason");
		subjectDetailPage.selectReasonForChangeOption(Constants.Subject_Reason_For_Change);

		reportLog("2.3: enter the reason for changing and the E-signature");
		subjectDetailPage.eSignReasonForChangeAndSubmit(SuperAdminUN, SuperAdminPW);		
		
		reportLog("3: Select an Edit option");
		subjectDetailPage.verifySubjectOpenedInEditMode();

		reportLog("3.1: Clean the Screening# field");
		subjectDetailPage.clearScreeningInp();

		reportLog("3.2: Save changes");
		subjectDetailPage.clickOnSaveBtn();

		reportLog("3.3: Enter the reason for changing and the E-signature");
		subjectDetailPage.selectReasonForChangeOption(Constants.Subject_Reason_For_Change);

		reportLog("3.4: Subject name gets the Temporary ID value");
		subjectDetailPage.verifyTempID(generatedTempId);
		subjectDetailPage.eSignReasonForChangeAndSubmit(SuperAdminUN, SuperAdminPW);

		reportLog("4.1: Logout from the application");
		loginPage.logoutApplication();

		reportLog("4.2: Verify user is logout");
		loginPage.verifyUserLogout();

	}

}
